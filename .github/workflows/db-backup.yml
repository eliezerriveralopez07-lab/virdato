name: Nightly DB backup

on:
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: db-backup
  cancel-in-progress: true

jobs:
  dump:
    runs-on: windows-latest
    timeout-minutes: 20
    steps:
      - name: Validate secret exists
        shell: pwsh
        env:
          DATABASE_URL_BACKUP: ${{ secrets.DATABASE_URL_BACKUP }}
        run: |
          if ([string]::IsNullOrEmpty($env:DATABASE_URL_BACKUP)) {
            Write-Error "DATABASE_URL_BACKUP secret missing (create it in Settings → Secrets and variables → Actions)."
          } else {
            Write-Host "Secret present (len):" $env:DATABASE_URL_BACKUP.Length
          }

      - name: Install pg client (Windows)
        shell: pwsh
        run: |
          choco install postgresql16 --no-progress -y
          echo "C:\Program Files\PostgreSQL\16\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          pg_dump --version
          psql --version

      - name: Test DB connection
        shell: pwsh
        env:
          DATABASE_URL_BACKUP: ${{ secrets.DATABASE_URL_BACKUP }}
        run: |
          psql "$env:DATABASE_URL_BACKUP" -c "select current_user, current_database();"

      - name: Dump Postgres (compressed)
        shell: pwsh
        env:
          DATABASE_URL_BACKUP: ${{ secrets.DATABASE_URL_BACKUP }}
        run: |
          $TS = Get-Date -Date (Get-Date).ToUniversalTime() -Format "yyyyMMdd-HHmmss"
          $FILE = "backup-$TS.dump"
          pg_dump "$env:DATABASE_URL_BACKUP" -Z 9 -Fc -f $FILE
          echo "FILE=$FILE" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Debug listing
        shell: pwsh
        run: |
          dir
          Write-Host "FILE is: $env:FILE"

      - name: Upload artifact (90 days)
        uses: actions/upload-artifact@v4
        with:
          name: neon-backup
          path: ${{ env.FILE }}
          retention-days: 90
