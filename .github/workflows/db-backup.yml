name: Nightly DB backup

on:
  schedule:
    - cron: "0 7 * * *"        # 07:00 UTC daily
  workflow_dispatch:

permissions:
  contents: write

concurrency: nightly-db-backup
env:
  PG_MAJOR: 17

jobs:
  dump:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ---- CONNECTION TEST (with DNS + SSL) ----
      - name: Quick connection test (psql)
        env:
          PGHOST: ${{ secrets.PGHOST }}
          PGPORT: ${{ secrets.PGPORT }}
          PGUSER: ${{ secrets.PGUSER }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGDATABASE: ${{ secrets.PGDATABASE }}
          PGSSLMODE: require
        run: |
          # Fail fast if host is wrong
          getent hosts "$PGHOST"

          docker run --rm \
            -e PGHOST -e PGPORT -e PGUSER -e PGPASSWORD -e PGDATABASE -e PGSSLMODE \
            postgres:${{ env.PG_MAJOR }}-alpine \
            psql "host=$PGHOST port=$PGPORT user=$PGUSER dbname=$PGDATABASE sslmode=$PGSSLMODE" -c "select 1"

      # ---- DUMP STEP (uses pg_dump 17 with SSL) ----
      - name: Dump Postgres (compressed, custom format)
        env:
          PGHOST: ${{ secrets.PGHOST }}
          PGPORT: ${{ secrets.PGPORT }}
          PGUSER: ${{ secrets.PGUSER }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGDATABASE: ${{ secrets.PGDATABASE }}
          PGSSLMODE: require
        run: |
          TS=$(date -u +%Y-%m-%dT%H-%M-%SZ)
          docker run --rm \
            -e PGHOST -e PGPORT -e PGUSER -e PGPASSWORD -e PGDATABASE -e PGSSLMODE \
            -v "$PWD:/dump" \
            postgres:${{ env.PG_MAJOR }}-alpine \
            sh -lc 'pg_dump "host=$PGHOST port=$PGPORT user=$PGUSER dbname=$PGDATABASE sslmode=$PGSSLMODE" -F c -Z 9 -f "/dump/db_'"$TS"'".dump'

      - name: Upload artifact (90 days)
        uses: actions/upload-artifact@v4
        with:
          name: db-backup
          path: db_*.dump
          retention-days: 90

