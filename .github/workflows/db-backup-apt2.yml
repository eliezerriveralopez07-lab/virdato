name: Nightly DB backup (apt2)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 7 * * *"   # nightly at 07:00 UTC

permissions:
  contents: write

concurrency: nightly-db-backup

jobs:
  dump:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Install PostgreSQL 17 client
        run: |
          echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
          wget -qO- https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/trusted.gpg.d/postgresql.asc > /dev/null
          sudo apt-get update
          sudo apt-get install -y postgresql-client-17

      - name: Show parsed DB URL
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          python -c "import os,urllib.parse as u;d=u.urlsplit(os.environ['DATABASE_URL']);print('SCHEME:',d.scheme);print('HOST:',d.hostname);print('PORT:',d.port);print('DB:',d.path.lstrip('/'))"

      - name: DNS check
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          HOST=$(python -c "import os,urllib.parse as u;print(u.urlsplit(os.environ['DATABASE_URL']).hostname)")
          echo "Resolving: $HOST"
          getent hosts "$HOST"

      - name: Quick connection test
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          psql "$DATABASE_URL?sslmode=require" -c "select version();"

      - name: Dump Postgres (compressed, custom format)
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          TS=$(date -u +%Y-%m-%dT%H-%M-%SZ)
          pg_dump "$DATABASE_URL?sslmode=require" -F c -Z 9 -f "db_${TS}.dump"

      - name: Upload artifact (90 days)
        uses: actions/upload-artifact@v4
        with:
          name: db-backup
          path: db_*.dump
          retention-days: 90
