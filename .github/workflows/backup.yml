name: nightly-db-dump

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

jobs:
  dump:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Connectivity + dump via Docker (Postgres 17)
        id: db
        shell: bash
        env:
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}     # db.qhixhmarbjkvjbsqpguz.supabase.co
          DB_PORT: ${{ secrets.DB_PORT }}     # 5432
          DB_USER: ${{ secrets.DB_USER }}     # backup_user
          DB_NAME: ${{ secrets.DB_NAME }}     # postgres
        run: |
          set -euo pipefail
          : "${DB_HOST:?Missing DB_HOST}"
          : "${DB_USER:?Missing DB_USER}"
          : "${DB_NAME:?Missing DB_NAME}"
          : "${PGPASSWORD:?Missing DB_PASSWORD}"
          DB_PORT="${DB_PORT:-5432}"

          echo "Testing connectivity with Postgres 17 client (Docker)..."
          docker run --rm \
            -e PGPASSWORD="$PGPASSWORD" \
            -e PGSSLMODE=require \
            postgres:17-alpine \
            psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -c "SELECT 1;"

          ts=$(date -u +'%Y%m%dT%H%M%SZ')
          outfile="dump_${ts}.pgc"

          echo "Running pg_dump (version 17) ..."
          docker run --rm \
            -e PGPASSWORD="$PGPASSWORD" \
            -e PGSSLMODE=require \
            -v "$PWD":/work \
            postgres:17-alpine \
            sh -c "pg_dump -h \"$DB_HOST\" -p \"$DB_PORT\" -U \"$DB_USER\" -d \"$DB_NAME\" -F c -f \"/work/$outfile\""

          echo "outfile=$outfile" >> "$GITHUB_OUTPUT"

      - name: Upload dump
        uses: actions/upload-artifact@v4
        with:
          name: pg-dump
          path: ${{ steps.db.outputs.outfile }}
          if-no-files-found: error
