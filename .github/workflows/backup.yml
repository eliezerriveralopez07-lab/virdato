name: Nightly DB backup

on:
  schedule:
    - cron: "0 4 * * *"     # nightly at 04:00 UTC
  workflow_dispatch: {}      # <-- enables the Run workflow button

jobs:
  dump:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: DNS check for PGHOST
        env: { PGHOST: ${{ secrets.PGHOST }} }
        run: |
          docker run --rm -e PGHOST busybox sh -lc '
            echo "PGHOST=$PGHOST";
            nslookup "$PGHOST" || echo "nslookup failed";
            getent hosts "$PGHOST" || echo "getent failed"
          '

      - name: psql connectivity check
        env:
          PGHOST:     ${{ secrets.PGHOST }}
          PGPORT:     ${{ secrets.PGPORT }}
          PGUSER:     ${{ secrets.PGUSER }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGDATABASE: ${{ secrets.PGDATABASE }}
          PGSSLMODE:  require
        run: |
          docker run --rm \
            -e PGHOST -e PGPORT -e PGUSER -e PGPASSWORD -e PGDATABASE -e PGSSLMODE \
            postgres:17 bash -lc 'psql -c "\conninfo"'

      - name: Dump with dockerized pg_dump 17
        env:
          PGHOST:     ${{ secrets.PGHOST }}
          PGPORT:     ${{ secrets.PGPORT }}
          PGUSER:     ${{ secrets.PGUSER }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGDATABASE: ${{ secrets.PGDATABASE }}
          PGSSLMODE:  require
        run: |
          docker run --rm -v "$PWD:/dump" \
            -e PGHOST -e PGPORT -e PGUSER -e PGPASSWORD -e PGDATABASE -e PGSSLMODE \
            postgres:17 bash -lc 'pg_dump --format=custom --no-owner -f /dump/backup.dump'

      - uses: actions/upload-artifact@v4
        with:
          name: db-backup
          path: backup.dump
          if-no-files-found: error
